import Head from "next/head";
import { Inter } from "next/font/google";
import dynamic from "next/dynamic";
import { Button } from "@/components/ui/Button";
import { cn } from "@/lib/utils";
import { useState } from "react";
import { AlignedTranscript, Player } from "@/components/Player";
import { readFile } from "@/utils/file";

const inter = Inter({ subsets: ["latin"] });

const Recorder = dynamic(
  () => import("@/components/Recorder").then((m) => m.Recorder),
  {
    ssr: false,
  }
);

type View = "initial" | "recording" | "saved";

export default function Home() {
  const [state, setState] = useState<View>("initial");
  const [resetKey, setResetKey] = useState(0);
  const [loadedData, setLoadedData] = useState<{
    audioBlobUrl: string;
    alignedTranscript: AlignedTranscript;
  } | null>(null);

  return (
    <>
      <Head>
        <title>Poor man Descript</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        className={cn(
          "flex flex-col items-center justify-center p-4 w-full max-w-3xl mx-auto",
          inter
        )}
      >
        <div className={cn("flex gap-2")}>
          <Button onClick={() => setState("recording")}>
            Start a new recording
          </Button>
          <Button
            variant={"ghost"}
            onClick={async () => {
              setState("saved");
              const result = await readFile();

              setLoadedData(result);
            }}
          >
            Open a saved recording
          </Button>
        </div>

        <div className="mt-8" key={resetKey}>
          {state === "recording" && <Recorder />}
          {state === "saved" && Boolean(loadedData) && (
            <div className={cn('flex flex-col items-center gap-4')}>
              <Button size="sm" variant="subtle" onClick={() => setResetKey((prev) => prev + 1)}>
                Reset
              </Button>
              <Player
                alignedTranscript={loadedData?.alignedTranscript!}
                audioBlobUrl={loadedData?.audioBlobUrl!}
              />
            </div>
          )}
        </div>
      </main>
    </>
  );
}
